{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { TTLCache } from \"@brokerloop/ttlcache\";\nimport { \n  Queue as SolanaQueue, \n  ON_DEMAND_DEVNET_QUEUE as SWITCHBOARD_DEVNET_QUEUE,\n  ON_DEMAND_MAINNET_QUEUE as SWITCHBOARD_MAINNET_QUEUE,\n} from \"@switchboard-xyz/on-demand\";\nimport {\n  Aptos,\n  Network,\n  ClientRequest,\n  ClientResponse,\n  MoveVector,\n  U8,\n} from \"@aptos-labs/ts-sdk\";\nimport { AxiosRequestConfig, default as axios } from \"axios\";\n\nimport type { QueueData } from \"./queue/index.js\";\nexport * from \"./aggregator/index.js\";\nexport * from \"./oracle/index.js\";\nexport * from \"./queue/index.js\";\nexport * from \"@switchboard-xyz/common\";\n\nexport const ON_DEMAND_MAINNET_QUEUE_KEY = SWITCHBOARD_MAINNET_QUEUE.toBase58();\nexport const ON_DEMAND_DEVNET_QUEUE_KEY = SWITCHBOARD_DEVNET_QUEUE.toBase58();\n\nexport const ON_DEMAND_MAINNET_ADDRESS = \"0xfea54925b5ac1912331e2e62049849b37842efaea298118b66f85a59057752b8\";\nexport const ON_DEMAND_MAINNET_QUEUE = \"0x7fdf7235bf3bd872ad093927deb2ff5f1645d1b6dabbfd4a03c3e0442788ce12\";\nexport const ON_DEMAND_MAINNET_GUARDIAN_QUEUE = \"0x3434a45114f5f8fc577557a9a3dda54c1799fee5271313f2599a1093c4a8ba01\";\n\nexport const ON_DEMAND_TESTNET_ADDRESS = \"0x4fc1809ffb3c5ada6b4e885d4dbdbeb70cbdd99cbc0c8485965d95c2eab90935\";\nexport const ON_DEMAND_TESTNET_QUEUE = \"0xe898232691709ed4f47827a100aac2ca8ea5b27692b5d694b00cb4b2c714e760\";\nexport const ON_DEMAND_TESTNET_GUARDIAN_QUEUE = \"0x17ce931b15d5c4ca8f8e6a5b6b84e2aee44002e5fc5cb4cf00817bb462b56c4a\";\n\nexport const ON_DEMAND_MOVEMENT_PORTO_ADDRESS = \"0xfa416028d48a85cd7791c8a93c438ce8a750af333a53fde55b276fd4aa16275f\";\nexport const ON_DEMAND_MOVEMENT_PORTO_QUEUE = \"0x4e445d2968329979b34df2606a65e962ad15a540885fdcbb19eaf7a2a5bf4a22\";\nexport const ON_DEMAND_MOVEMENT_PORTO_GUARDIAN_QUEUE = \"0x63be642227d71ba56713d2cdb2efd13de0fb7d9783761e4d7f18327c7336f994\";\n\n// ==============================================================================\n// Caching for Fetch Update Ix\n\n// 1 min cache for sui cache\nexport const aptosQueueCache = new TTLCache<string, QueueData>({\n  ttl: 1000 * 60,\n});\n\n// 5 min solana queue cache - reloads the sol program every 5 minutes max\nexport const solanaProgramCache = new TTLCache<string, SolanaQueue>({\n  ttl: 1000 * 60 * 5,\n});\n\n// ==============================================================================\n\nexport interface SwitchboardState {\n  switchboardAddress: string;\n  guardianQueue: string;\n  oracleQueue: string;\n  mainnet: boolean;\n}\n\nexport interface CommonOptions {\n  switchboardAddress?: string;\n  guardianQueue?: string;\n  oracleQueue?: string;\n  network?: Network;\n}\n\nexport class SwitchboardClient {\n  state: Promise<SwitchboardState | undefined>;\n\n  constructor(readonly aptos: Aptos, readonly chain?: string) {\n    this.state = this.fetchState();\n  }\n\n  /**\n   * Fetch the correct addresses for the current network\n   * @param retries Number of retries to fetch the state\n   */\n  async fetchState(\n    options?: CommonOptions,\n    retries: number = 3\n  ): Promise<SwitchboardState> {\n    if (retries <= 0) {\n      throw new Error(\n        \"Failed to fetch Switchboard state after multiple attempts\"\n      );\n    }\n\n\n    const isMainnet = this.aptos.config.network === Network.MAINNET;\n    const isAptos = this.chain === \"aptos\" || !this.chain;\n\n    try {\n      if (Network.MAINNET === this.aptos.config.network && isAptos) {\n        return {\n          switchboardAddress:\n            options?.switchboardAddress ??\n            ON_DEMAND_MAINNET_ADDRESS,\n          guardianQueue: options?.guardianQueue ?? ON_DEMAND_MAINNET_GUARDIAN_QUEUE,\n          oracleQueue: options?.oracleQueue ?? ON_DEMAND_MAINNET_QUEUE,\n          mainnet: isMainnet,\n        }\n      } else if (Network.TESTNET === this.aptos.config.network && isAptos) {\n        return {\n          switchboardAddress:\n            options?.switchboardAddress ??\n            ON_DEMAND_TESTNET_ADDRESS,\n          guardianQueue: options?.guardianQueue ?? ON_DEMAND_TESTNET_GUARDIAN_QUEUE,\n          oracleQueue: options?.oracleQueue ?? ON_DEMAND_TESTNET_QUEUE,\n          mainnet: isMainnet,\n        };\n      } else if (this.chain === \"porto\") {\n        return {\n          switchboardAddress:\n            options?.switchboardAddress ??\n            ON_DEMAND_MOVEMENT_PORTO_ADDRESS,\n          guardianQueue: options?.guardianQueue ?? ON_DEMAND_MOVEMENT_PORTO_GUARDIAN_QUEUE,\n          oracleQueue: options?.oracleQueue ?? ON_DEMAND_MOVEMENT_PORTO_QUEUE,\n          mainnet: isMainnet,\n        };\n      }\n    } catch (error) {\n      console.error(\"Error fetching Switchboard state, retrying...\");\n      return this.fetchState(options, retries - 1);\n    }\n  }\n}\n\nexport async function axiosAptosClient<Req, Res>(\n  requestOptions: ClientRequest<Req>\n): Promise<ClientResponse<Res>> {\n  const { params, method, url, headers, body } = requestOptions;\n\n  const customHeaders: any = {\n    ...headers,\n    customClient: true,\n  };\n\n  const config: AxiosRequestConfig = {\n    url,\n    method,\n    headers: customHeaders,\n    data: body,\n    params,\n  };\n\n  try {\n    const response = await axios(config);\n    return {\n      status: response.status,\n      statusText: response.statusText,\n      data: response.data,\n      headers: response.headers,\n      config: response.config,\n      request: response.request,\n    };\n  } catch (error: any) {\n    if (axios.isAxiosError(error)) {\n      const errorMessage = error.response?.data?.message;\n      const errorCode = error.response?.data?.error_code;\n\n      if (errorMessage && errorCode) {\n        console.error(`Error: ${errorMessage} (Code: ${errorCode})`);\n      } else {\n        console.error(\"An unknown error occurred.\");\n      }\n    } else {\n      console.error(\"An unexpected error occurred:\", error);\n    }\n  }\n}\n\nexport async function waitForTx(\n  aptos: Aptos,\n  transactionHash: string,\n  maxRetries = 5,\n  initialDelay = 500 // Start with a half-second delay\n) {\n  let retries = 0;\n  let delay = initialDelay;\n\n  while (retries < maxRetries) {\n    try {\n      const result = await aptos.waitForTransaction({\n        transactionHash,\n        options: {\n          timeoutSecs: 30,\n          checkSuccess: true,\n        },\n      });\n      return result;\n    } catch (error) {\n      await new Promise((resolve) => setTimeout(resolve, delay));\n      delay *= 2; // Exponential backoff: double the delay\n      retries++;\n    }\n  }\n\n  throw new Error(`Transaction not found after ${maxRetries} retries.`);\n}\n\nexport function updateToBCS(update: number[][]): MoveVector<MoveVector<U8>> {\n  return new MoveVector<MoveVector<U8>>(update.map((u) => MoveVector.U8(u)));\n}\n"]}