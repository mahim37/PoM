export class Oracle {
    constructor(client, address) {
        this.client = client;
        this.address = address;
    }
    /**
     * Create a new Oracle
     */
    static async initTx(client, sender, options) {
        const { switchboardAddress } = await client.fetchState(options);
        if (options.isGuardian && !options.guardianQueue) {
            throw new Error("Guardian queue is required for guardian oracle");
        }
        else if (!options.isGuardian && !options.oracleQueue) {
            throw new Error("Oracle queue is required for oracle");
        }
        return client.aptos.transaction.build.simple({
            sender,
            data: {
                function: `${switchboardAddress}::oracle_init_action::run`,
                functionArguments: [
                    options.isGuardian ? options.guardianQueue : options.oracleQueue,
                    Array.from(Buffer.from(options.oracleKey, "hex")),
                ],
            },
        });
    }
}
//# sourceMappingURL=index.js.map